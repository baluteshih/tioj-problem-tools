[path]
# setup the critical paths in a problem directory
metadata = "problem.json"
solutions = "solutions.json"
subtasks = "subtasks.json"
input_suffix = ".in"
output_suffix = ".out"
gen_file = "gen/data"
testdata = "tests/*" # +[input|output]_suffix, regex
sample = "tests/0-*" # +[input|output]_suffix, regex
public_sample = "public/examples/*" # +[input|output]_suffix, regex
checker = "checker/checker.cpp"
header = "grader/cpp/%s.h" # require: code
grader = "grader/cpp/grader.cpp"
code = "solution"

[path.auto_upload]
# keys should match tioj_instance_settings.toml/tioj_instance.auto_upload
description = "statement/description.md"
input = "statement/input.md"
output = "statement/output.md"
hints = "statement/hints.md"
source = "statement/source.md"
